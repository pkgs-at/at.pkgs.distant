[% /* <meta charset="UTF-8" /> */ %%]
[% with ({
	title: 'Build: ' + $.build.name,
}) { %%]
[? extends ~/markup/base.htpl ??]
[? body_main { ??]
[? base ??]
<h4>Build Information</h4>
<div class="refresh">
  <p class="text-muted" style="margin-left:180px;">Now loading...</p>
[@ BEGIN_CLIENT_TEMPLATE @]
{% with ({
	$build: $model.children('Build')
}) { %}
  <dl class="dl-horizontal refresh">
    <dt>Project:</dt>
    <dd>[= $.build.project =]</dd>
    <dt>Target:</dt>
    <dd>[= $.build.target =]</dd>
    <dt>Region:</dt>
    <dd>[= $.build.region =]</dd>
    <dt class="text-info">Invoked:</dt>
    <dd class="text-info">{= $build.attr('invoked') =}</dd>
    <dt class="text-success">Succeed:</dt>
    <dd class="text-success">{= $build.attr('succeed') =}</dd>
    <dt class="text-danger">Aborted:</dt>
    <dd class="text-danger">{= $build.attr('aborted') =}</dd>
    <dt>User:</dt>
    <dd>[= $.build.user =]</dd>
    <dt>Comment:</dt>
    <dd>[= $.build.comment =]</dd>
    <dt>Timestamp:</dt>
    <dd>[= Date.create($.build.timestamp.time).format('{yyyy}-{MM}-{dd}T{HH}:{mm}:{ss}{isotz}') =]</dd>
{% }; %}
</dl>
[@ END_CLIENT_TEMPLATE @]
</div>
[% Java.from($.buildServers).each(function(server) { %%]
<div class="refresh" data-server="[= server.name =]">
  <h4 class="text-muted" style="margin-left:180px;">[= server.name =]</h4>
  <p class="text-muted" style="margin-left:180px;">Now loading...</p>
[@ BEGIN_CLIENT_TEMPLATE @]
{% with ({
	name: $server.attr('name'),
	status: parseInt($server.attr('status')),
	output: $server.children('Output').text(),
	timestamp: Date.create($server.attr('timestamp').toNumber(10))
}) { %}
  <h4 class="text-{=  status ? 'danger' : (output ? 'success' : 'warning') =}">{= name =}</h4>
{% if (!output) { %}
  <p class="text-warning" style="margin-left:180px;">Not completed...</p>
{% } else { %}
  <dl class="dl-horizontal">
    <dt>Status:</dt>
    <dd>{= status =}</dd>
    <dt>Output:</dt>
    <dd>
      <a href="#server_{= name =}_output" data-toggle="collapse">show...</a>
      <pre class="pre-scrollable collapse" id="server_{= name =}_output">{= output =}</pre>
    </dd>
    <dt>Timestamp:</dt>
    <dd>{= timestamp.format('{yyyy}-{MM}-{dd}T{HH}:{mm}:{ss}{isotz}') =}</dd>
  </dl>
{% } %}
{% }; %}
[@ END_CLIENT_TEMPLATE @]
</div>
[% }); %%]
<script>
(function(root, unasigned) {
	var contents;
	var refresh;

	contents = new Array();
	$('.refresh').each(function() {
		var $this;
		var name;
		var template;

		$this = $(this);
		name = $this.attr('data-server');
		template = $this.find('script[type="application/x-template"]').at().template();
		contents.push(function($model) {
			var $server;

			if (name == null) {
				$this.html(template({ $model: $model }));
				return $model.children('Build').attr('completed') != 'true';
			}
			else {
				$server = $model.children('BuildServers').children('BuildServer[name="' + name + '"]');
				$this.html(template({ $server: $server }));
				return $server.children('Output').length < 1;
			}
		});
	});
	refresh = function() {
		$.ajax({
			async: true,
			cache: false,
			data: { action: 'refresh' },
			dataType: 'xml',
			success: function(data) {
				var $model;
				var alive;

				$model = $(data.documentElement);
				alive = new Array();
				contents.each(function(content) { 
					if (content($model)) alive.push(content);
				});
				contents = alive;
				if (contents.length > 0) root.setTimeout(refresh, 1000);
			},
			error: function(data) {
				alert('Please reload this page (network error).');
			},
			type: 'GET'
		});
	};
	refresh();
})(this);
</script>
[? } body_main ??]
[% } %%]
